@{
	string PageName = "Personeller";
	string AreaName = "Admin";
}


<div class="card">
	<div class="card-body">
		<div id="gridContainer" class="border"></div>
	</div>
</div>

<script>
	$(document).ready(function () {

		$('#gridContainer').dxDataGrid({
			dataSource: {
				load: function (loadOptions) {
					var data = {
						PageSize: loadOptions.take || 10,
						PageIndex: Math.floor((loadOptions.skip || 0) / (loadOptions.take || 10)),
						Filter: loadOptions.filter ? JSON.stringify(loadOptions.filter) : null, // Pass the filter as JSON
					};
					return $.ajax({
						url: '/@AreaName/get-personels',
						method: 'POST',
						data: JSON.stringify(data),
						dataType: 'json',
						contentType: 'application/json',
					}).then(function (response) {

						let gridInstance = $('#gridContainer').dxDataGrid('instance');
						debugger;
						if (response && !gridInstance.__lookupSet) {
							gridInstance.beginUpdate();
							if (response.GenderSel) {
								gridInstance.option('columns[4].lookup.dataSource', response.GenderSel);
							}
							gridInstance.endUpdate();

							gridInstance.__lookupSet = true; // Lookup'ların ayarlandığını işaretle
						}

						if (response && response.Items) {
							return {
								data: response.Items,
								totalCount: response.Count
							};
						} else {
							return {
								data: [],
								totalCount: 0
							};
						}
					}).catch(function (error) {
						return {
							data: [],
							totalCount: 0
						};
					});
				}
			},
			filterRow: { visible: true },
			remoteOperations: { paging: true, filtering: true, sorting: true },
			paging: {
				pageSize: 10,
				pageIndex: 0,
				enabled: true
			},
			pager: {
				showPageSizeSelector: true,
				allowedPageSizes: [10, 20, 30],
				showNavigationButtons: true,
				visible: true,
				showInfo: true
			},
			keyExpr: 'id',
			showBorders: true,
			headerFilter: { visible: false },
			searchPanel: {
				visible: true,
				width: 240,
				placeholder: "Personel Ara..."
			},
			editing: {
				mode: 'none'
			},
			columns: [
				{
					dataField: 'Id',
					caption: 'Düzenle',
					width: 200,
					cellTemplate: function (container, options) {
                        // Profil butonu (şluna giden)
                        $('<a class="profile-icon" style="color:#28a745; margin-right:20%; cursor:pointer;" title="Profil">' +
                            '<i class="fas fa-user" style="font-size: 15px;"></i>' +
                            '</a>')
                            .on('click', function () {
                                var id = options.data.Id;
                                window.location.href = '/Admin/personel/' + id + '/profil';
                            })
                            .appendTo(container);


											$('<a class="edit-icon" style="color:#f0ad4e; margin-right:20%; cursor:pointer;" title="QR Kodu Görüntüle">' +
								'<i class="fas fa-qrcode" style="font-size: 15px;"></i>' +
							  '</a>')
							  .on('click', function () {
								var id = options.data.Id;
								zuraf.getById('/@AreaName/get-personelqr', id, '#gridContainer');
							  })
							  .appendTo(container);


						$('<a class="edit-icon" style="color:#0085cf; margin-right:20%; cursor:pointer;" title="Düzenle"><i class="fas fa-pen-nib" style="font-size: 15px;"></i></a>')
							.on('click', function () {
								var id = options.data.Id;
								zuraf.getById('/@AreaName/get-personel', id, '#gridContainer');
							}).appendTo(container);

						$('<a class="delete-icon text-danger" style="cursor:pointer;" title="Sil"><i class="far fa-trash-alt" style="font-size: 15px;"></i></a>')
							.on('click', function () {
								var id = options.data.Id;
								zuraf.deleteById('/@AreaName/delete-personel', id, '#gridContainer', true);
							}).appendTo(container);

					},
					allowFiltering: false
				},




				{
					dataField: 'isim',
					caption: 'İsim',
					allowFiltering: true,
					alignment: "center"
				},
				{
					dataField: 'soyisim',
					caption: 'Soyisim',
					allowFiltering: true,
					alignment: "center"
				},

				{
					dataField: 'adres',
					caption: 'Adres',
					allowFiltering: true,
					alignment: "center"
				}
			],
				masterDetail: {
		enabled: true,
		template: function (container, options) {
			var detailContainer = $('<div class="row p-3">').appendTo(container);

			function createDetail(label, value, badgeClass = 'badge-secondary') {
				var col = $('<div class="col-md-3 mb-3">'); // responsive 4lü kolon
				$('<div>').css({ 'font-weight': 'bold' }).text(label).appendTo(col);
				$('<div>').html('<span class="badge ' + badgeClass + '">' + (value || 'N/A') + '</span>').appendTo(col);
				return col;
			}

			detailContainer.append(

				createDetail('Telefon Numarası 1', options.data.telefonNumarasi1, 'badge-primary'),
				createDetail('Telefon Numarası 2', options.data.telefonNumarasi2, 'badge-info'),
				createDetail('TC Kimlik No', options.data.tcKimlik, 'badge-dark'),
												createDetail('Vesikalık Fotoğrafı', `<img src="../../${options.data.profilFotografiUrl}" alt="Profil Fotoğrafı" style ="max-width: 100px; max-height: 100px;" >`, 'badge-secondary'),

				createDetail('Doğum Tarihi', options.data.dogumTarihi, 'badge-warning'),
				createDetail("Cinsiyet", options.data.CinsiyetStr, 'badge-secondary'),
				createDetail('Banka Hesap No', options.data.bankaHesapNo, 'badge-warning'),
				createDetail('Vergi No', options.data.vergiNo, 'badge-success'),
				createDetail('Vergi Dairesi Adı', options.data.vergiDairesiAdi, 'badge-danger'),
				createDetail('SGK Sicil No', options.data.sgkSicilNo, 'badge-light'),
				createDetail('Departman', options.data.DepartmentSelName, 'badge-secondary'),
				createDetail('Pozisyon', options.data.PositionSelName, 'badge-secondary'),
				createDetail('Şube', options.data.SubeSelName, 'badge-secondary'),
				createDetail('Başlangıç Tarihi', options.data.baslangicTarihi, 'badge-secondary'),
				createDetail('Bitiş Tarihi', options.data.bitisTarihi, 'badge-secondary'),
				createDetail("Yıllık izin gün sayısı", options.data.yillikIzinGunSayisi, 'badge-secondary'),
				createDetail("Performans Notu", options.data.performansNotu, 'badge-secondary'),
				createDetail("Haftalık Saat", options.data.haftalikSaat, 'badge-secondary'),
				createDetail('Saatlik Ücret', options.data.saatlikUcret, 'badge-light'),
				createDetail("Fazla Mesai'ye", options.data.fazlaMesaiUygunStr, 'badge-secondary'),
				createDetail("Çalışma Tipi", options.data.CalismaTipiStr, 'badge-secondary'),
				createDetail("Vardiya Türü", options.data.VardiyaTuruStr, 'badge-secondary'),
				createDetail('Açıklama', options.data.aciklama, 'badge-light'),
				createDetail('Code', options.data.Code, 'badge-light'),


			);
		}
	},

			toolbar: {
				items: [
					{
						location: 'before',
						template: function () {
							return '<div class="headline"><h7><i class="icon-feather-bar-chart-2"></i>@PageName</h7></div>';
						}
					},
					{
						location: 'after',
						template: function () {
							return ' <a onclick="zuraf.getById(\'/@AreaName/get-personel\',null,\'#gridContainer\')" id="addButton" class="btn btn-primary mr-1 mb-1" ><i class="fa fa-plus"></i> &nbsp; Ekle</a>';
						}
					},
				]
			},
			onContentReady: function (e) {
				if (!e.component.__ready) {
					e.component.__ready = true;
				}
			},
			groupPanel: {
				visible: false
			},
			grouping: {
				autoExpandAll: false
			},
			groupExpandMode: "rowClick",
			columnChooser: {
				enabled: true
			}
		});
	});
</script>

